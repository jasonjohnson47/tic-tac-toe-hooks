{"version":3,"sources":["Square.tsx","Board.tsx","History.tsx","logic.ts","Game.tsx","index.tsx"],"names":["Square","props","onClick","testid","className","data-testid","value","Board","squares","renderSquare","i","role","aria-label","board","k","j","push","createBoard","History","history","jumpToStepInHistory","currentStep","historyLength","length","previousButtonAttrs","disabled","nextButtonAttrs","aria-hidden","focusable","data-prefix","data-icon","xmlns","viewBox","fill","d","aria-live","aria-atomic","calculateWinner","lines","a","b","c","Game","status","useState","Array","setHistory","xIsNext","setXIsNext","stepNumber","setStepNumber","current","winner","slice","concat","handleSquareClick","step","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8f40eff.chunk.js","sourcesContent":["interface SquareProps {\n    value: string | null;\n    onClick: () => void;\n    key: number;\n    testid: string;\n}\n\nfunction Square(props: SquareProps) {\n    const {onClick, testid} = props;\n    return (\n        <button className=\"square\" onClick={onClick} data-testid={testid}>\n            {props.value}\n        </button>\n    );\n}\n\nexport default Square;","import Square from './Square';\n\ninterface boardProps {\n    squares: (string | null)[];\n    onClick: (i: number) => void;\n}\n\nfunction Board(props: boardProps):JSX.Element {\n\n    const {squares, onClick} = props;\n\n    function renderSquare(i: number):JSX.Element {\n        return (\n            <Square\n                value={squares[i]}\n                onClick={() => onClick(i)}\n                key={i}\n                testid={'square-' + i}\n            />\n        );\n    }\n\n    function createBoard(): JSX.Element[] {\n        const board: JSX.Element[] = [];\n        let k: number = 0;\n\n        for (let i = 0; i < 3; i++) {\n            let squares: JSX.Element[] = [];\n            for (let j = 0; j < 3; j++) {\n                squares.push(renderSquare(k));\n                k++;\n            }\n            board.push(<div className=\"board-row\" key={i}>{squares}</div>);\n        }\n        return board;\n    }\n\n    return (\n        <div className=\"game-board\" data-testid=\"game-board\" role=\"region\" aria-label=\"Tic Tac Toe Board\">\n            {createBoard()}\n        </div>\n    );\n}\n\nexport default Board;","type squaresArr = (string | null)[];\n\ninterface historyObj {\n    squares: squaresArr;\n}\n\ninterface historyProps {\n    history: historyObj[];\n    jumpToStepInHistory: (step: number) => void;\n    currentStep: number;\n}\n\nfunction History(props: historyProps) {\n\n    const {history, jumpToStepInHistory, currentStep} = props;\n    const historyLength = history.length;\n\n    // Previous Button\n    const previousButtonAttrs = {\n        onClick: () => jumpToStepInHistory(currentStep - 1),\n        disabled: false\n    }\n    if (currentStep === 0) {\n        previousButtonAttrs.disabled = true;\n    }\n\n    // Next Button\n    const nextButtonAttrs = {\n        onClick: () => jumpToStepInHistory(currentStep + 1),\n        disabled: false\n    }\n    if (historyLength - 1 === currentStep) {\n        nextButtonAttrs.disabled = true;\n    }\n\n    return (\n        <div className=\"history\" role=\"region\" aria-label=\"Game History\" data-testid=\"history\">\n            <div className=\"history-nav\">\n                <button {...previousButtonAttrs}><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"caret-left\" className=\"svg-inline--fa fa-caret-left fa-w-6\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192 512\"><path fill=\"currentColor\" d=\"M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z\"></path></svg><span className=\"sr-only\">Previous Step</span></button>\n                    <span className=\"history-current-step\" aria-live=\"polite\" aria-atomic=\"true\"><span className=\"sr-only\">Step </span>{currentStep}&nbsp;/&nbsp;<span className=\"sr-only\">of </span>{historyLength - 1}</span>\n                <button {...nextButtonAttrs}><svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"caret-right\" className=\"svg-inline--fa fa-caret-right fa-w-6\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192 512\"><path fill=\"currentColor\" d=\"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"></path></svg><span className=\"sr-only\">Next Step</span></button>\n            </div>\n        </div>\n    );\n}\n\nexport default History;","function calculateWinner(squares: (string | null)[]): string | null {\n    const lines: number[][] = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (\n            squares[a] &&\n            squares[a] === squares[b] &&\n            squares[a] === squares[c]\n        ) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nexport {calculateWinner};","import { useState } from 'react';\nimport Board from './Board';\nimport History from './History';\nimport {calculateWinner} from './logic';\n\ntype squaresArr = (string | null)[];\n\ninterface historyObj {\n    squares: squaresArr;\n}\n\nfunction Game():JSX.Element {\n\n    const [history, setHistory]: [historyObj[], React.Dispatch<React.SetStateAction<historyObj[]>>] = useState([\n        { squares: Array(9).fill(null) }\n    ]);\n    const [xIsNext, setXIsNext] = useState(true);\n    const [stepNumber, setStepNumber] = useState(0);\n    const current: historyObj = history[stepNumber];\n    \n    const winner: string | null = calculateWinner(current.squares);\n    let status: string;\n    if (winner !== null) {\n        status = 'Winner: ' + winner;\n    } else {\n        status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n    }\n\n    function handleSquareClick(i: number): void {\n        const squares: squaresArr = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = xIsNext ? 'X' : 'O';\n        setHistory(history.concat([{squares: squares}]));\n        setXIsNext(!xIsNext);\n        setStepNumber(history.length);\n    }\n\n    function jumpToStepInHistory(step: number) {\n        setStepNumber(step);\n        setXIsNext((step % 2) === 0);\n    }\n\n    return (\n        <div className=\"game\" data-testid=\"game\">\n            <h1 className=\"sr-only\">Tic Tac Toe</h1>\n            <Board\n                squares={current.squares}\n                onClick={(i: number) => handleSquareClick(i)}\n            />\n            <div className=\"game-info\">\n                <div className=\"status\" aria-live=\"assertive\" aria-atomic=\"true\">{status}</div>\n                <h2>Game History</h2>\n                <History history={history} jumpToStepInHistory={jumpToStepInHistory} currentStep={stepNumber} />\n            </div>\n        </div>\n    );\n}\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Game />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}